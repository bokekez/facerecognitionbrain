{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/Brain.png","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","components/SignIn/SignIn.js","components/Register/Register.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Logo","options","max","height","width","paddingTop","alt","src","brain","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","Rank","name","entries","FaceRecognition","imageUrl","box","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","SignIn","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","htmlfor","this","href","React","Component","Register","onNameChange","resopnse","app","Clarifai","App","apiKey","particlesOptions","particles","number","density","enable","value_area","initialState","input","route","joined","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","models","predict","FACE_DETECT_MODEL","count","Object","assign","catch","console","log","err","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d9e36fb4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation = ({onRouteChange, isSignedIn}) => {\r\n\t\r\n\tif(isSignedIn) {\r\n\t\treturn (\r\n\t\t<nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n\t\t\t<p onClick={() => onRouteChange('signout')} className='f3 link dim black underline pa3 pointer'>Sign out</p>\r\n\t\t</nav>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n\t\t\t\t\r\n\t\t\t\t<p onClick={() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Rgister</p>\r\n\t\t\t\t<p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign in</p>\r\n\t\t\t</nav>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Navigation;","export default __webpack_public_path__ + \"static/media/Brain.641ff254.png\";","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport brain from './Brain.png';\r\nimport './Logo.css'\r\n\r\nconst Logo = () => {\r\n\treturn (\r\n\t\t<div className='ma4 mt0'>\r\n\t\t\t<Tilt className=\"Tilt br2 shadow-2\" options={{ max : 75 }} style={{ height: 130, width: 130 }} >\r\n\t\t\t <div className=\"Tilt-inne pa3\"><img style={{paddingTop: 'spx'}} alt='logo' src={brain}/></div>\r\n\t\t\t</Tilt>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './ImageLinkForm.css'\r\n\r\nconst ImageLinkForm = ( { onInputChange, onButtonSubmit }) => {\r\n\treturn (\r\n\t\t<div className='ma4 mt0'>\r\n\t\t\t<p className='f3'>\r\n\t\t\t\t{'This Magic Brain will detect faces in your pictures. Give it a try'}\r\n\t\t\t</p>\r\n\t\t\t<div className='center'>\r\n\t\t\t<div className='center form pa4 br3 shadow-5'>\r\n\t\t\t\t<input className='f4 pa2 w-70 center' type='text' onChange={onInputChange}/>\r\n\t\t\t\t<button className='w-30 grow f4 link ph3 pv2 dib white bg-blue'\r\n\t\t\t\tonClick={onButtonSubmit}\r\n\t\t\t\t>Detect</button>\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\n// import './Rank.css'\r\n\r\n    const Rank = ({ name, entries }) => {\r\n      return (\r\n        <div>\r\n          <div className='white f3'>\r\n            {`${name}, your current entry count is...`}\r\n          </div>\r\n          <div className='white f1'>\r\n            {entries}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './FaceRecognition.css'\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n\treturn (\r\n\t\t<div className='center ma'>\r\n\t\t\t<div className='absolute mt2'>\r\n\t\t\t\t<img id='inputimage' src={imageUrl} alt='Input a url' width='500px' height='auto'/>\r\n\t\t\t\t<div className='bounding-box' \r\n\t\t\t\tstyle={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\n\r\n\r\nclass SignIn extends React.Component{\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state ={\r\n\t\t\tsignInEmail: '',\r\n\t\t\tsignInPassword: ''\r\n\t\t}\r\n\t}\r\n\tonEmailChange = (event) => {\r\n\t\tthis.setState({signInEmail: event.target.value})\r\n\t}\r\n\tonPasswordChange = (event) => {\r\n\t\tthis.setState({signInPassword: event.target.value})\r\n\t}\r\n\tonSubmitSignIn = () => {\r\n\t\tfetch('https://fierce-shore-50408.herokuapp.com/signin', {\r\n\t\t\tmethod: 'post',\r\n\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\temail: this.state.signInEmail,\r\n\t\t\t\tpassword: this.state.signInPassword\r\n\t\t\t})\r\n\t\t}).then(response => response.json())\r\n\t      .then(user => {\r\n\t        if(user.id){ // does the user exist? Did we receive a user with a property of id?\r\n\t          this.props.loadUser(user);\r\n\t          this.props.onRouteChange('home');\r\n        }\r\n      })\r\n\t}\r\n\trender(){\r\n\t\treturn (\r\n\t\t<article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n\t\t\t<main className=\"pa4 black-80\">\r\n\t\t\t  <div className=\"measure\">\r\n\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t      <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n\t\t\t      <div className=\"mt3\">\r\n\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlfor=\"email-address\">Email</label>\r\n\t\t\t        <input \r\n\t\t\t        onChange={this.onEmailChange}\r\n\t\t\t        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n\t\t\t      </div>\r\n\t\t\t      <div className=\"mv3\">\r\n\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlfor=\"password\">Password</label>\r\n\t\t\t        <input \r\n\t\t\t        onChange={this.onPasswordChange}\r\n\t\t\t\t        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t        type=\"password\" name=\"password\"  id=\"password\" />\r\n\t\t\t      </div>\r\n\t\t\t     \r\n\t\t\t    </fieldset>\r\n\t\t\t    <div className=\"\">    \r\n\t\t\t      <input \r\n\t\t\t      onClick={ this.onSubmitSignIn}\r\n\t\t\t      className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n\t\t\t      type=\"submit\" value=\"Sign in\" />\r\n\t\t\t    </div>\r\n\t\t\t    <div className=\"lh-copy mt3\">\r\n\t\t\t      <p onClick={() => this.props.onRouteChange('register')} href=\"#0\" className=\"f6 link dim black db pointer\">Register</p>\r\n\t\t\t    </div>\r\n\t\t\t  </div>\r\n\t\t\t</main>\r\n\t\t</article>\r\n\t);\r\n\t}\r\n// } ({onRouteChange}) => {\r\n// \treturn (\r\n// \t\t<article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n// \t\t\t<main className=\"pa4 black-80\">\r\n// \t\t\t  <div className=\"measure\">\r\n// \t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n// \t\t\t      <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n// \t\t\t      <div className=\"mt3\">\r\n// \t\t\t        <label className=\"db fw6 lh-copy f6\" htmlfor=\"email-address\">Email</label>\r\n// \t\t\t        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n// \t\t\t      </div>\r\n// \t\t\t      <div className=\"mv3\">\r\n// \t\t\t        <label className=\"db fw6 lh-copy f6\" htmlfor=\"password\">Password</label>\r\n// \t\t\t        <input \r\n// \t\t\t\t        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n// \t\t\t\t        type=\"password\" name=\"password\"  id=\"password\" />\r\n// \t\t\t      </div>\r\n\t\t\t     \r\n// \t\t\t    </fieldset>\r\n// \t\t\t    <div className=\"\">    \r\n// \t\t\t      <input \r\n// \t\t\t      onClick={() => onRouteChange('home')}\r\n// \t\t\t      className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n// \t\t\t      type=\"submit\" value=\"Sign in\" />\r\n// \t\t\t    </div>\r\n// \t\t\t    <div className=\"lh-copy mt3\">\r\n// \t\t\t      <p onClick={() => onRouteChange('register')} href=\"#0\" className=\"f6 link dim black db pointer\">Register</p>\r\n// \t\t\t    </div>\r\n// \t\t\t  </div>\r\n// \t\t\t</main>\r\n// \t\t</article>\r\n// \t);\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\n\r\n\r\nclass Register  extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state ={\r\n\t\t\temail: '',\r\n\t\t\tpassword: '',\r\n\t\t\tname: ''\r\n\t\t}\r\n\t}\r\n\tonNameChange = (event) => {\r\n\t\tthis.setState({name: event.target.value})\r\n\t}\r\n\tonEmailChange = (event) => {\r\n\t\tthis.setState({email: event.target.value})\r\n\t}\r\n\tonPasswordChange = (event) => {\r\n\t\tthis.setState({password: event.target.value})\r\n\t}\r\n\tonSubmitSignIn = () => {\r\n\t\tfetch('https://fierce-shore-50408.herokuapp.com/register', {\r\n\t\t\tmethod: 'post',\r\n\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\temail: this.state.email,\r\n\t\t\t\tpassword: this.state.password,\r\n\t\t\t\tname: this.state.name\r\n\t\t\t})\r\n\t\t}).then(resopnse => resopnse.json())\r\n\t\t.then(user =>{\r\n\t\t\tif (user){\r\n\t\t\t\tthis.props.loadUser(user);\r\n\t\t\t\tthis.props.onRouteChange('home');\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n  render(){\r\n  \t// const { onRouteChange } = this.props;;\r\n\treturn (\r\n\t\t<article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n\t\t\t<main className=\"pa4 black-80\">\r\n\t\t\t  <div className=\"measure\">\r\n\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t      <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n\t\t\t      <div className=\"mt3\">\r\n\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlfor=\"name\">Name</label>\r\n\t\t\t        <input\r\n\t\t\t\t\tonChange={this.onNameChange}\r\n\t\t\t        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\" />\r\n\t\t\t      </div>\r\n\t\t\t      <div className=\"mt3\">\r\n\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlfor=\"email-address\">Email</label>\r\n\t\t\t        <input\r\n\t\t\t        onChange={this.onEmailChange}\r\n\t\t\t         className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n\t\t\t        \r\n\t\t\t      </div>\r\n\t\t\t      \r\n\t\t\t      <div className=\"mv3\">\r\n\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlfor=\"password\">Password</label>\r\n\t\t\t        <input \r\n\t\t\t        \tonChange={this.onPasswordChange}\r\n\t\t\t\t        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t        type=\"password\" name=\"password\"  id=\"password\" />\r\n\t\t\t      </div>\r\n\t\t\t     \r\n\t\t\t    </fieldset>\r\n\t\t\t    <div className=\"\">    \r\n\t\t\t      <input \r\n\t\t\t      onClick={this.onSubmitSignIn}\r\n\t\t\t      className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n\t\t\t      type=\"submit\" value=\"Register\" />\r\n\t\t\t    </div>\r\n\t\t\t  </div>\r\n\t\t\t</main>\r\n\t\t</article>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Register;","import React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Clarifai from 'clarifai';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Particles from 'react-particles-js';\nimport './App.css';\n\nconst app = new Clarifai.App({\n apiKey: '007198c48b8740148a04d4c426d3febd'\n});\n\nconst particlesOptions = {\n  // interactivity:{\n  //       events: {\n  //         onhover:{\n  //           enable: true,\n  //           mode: 'repulse'\n  //         }\n  //       }\n  //     },\n  particles: {\n    number: {\n      value: 50,\n      density: {\n        enable: true,\n        value_area: 400    \n      }\n    }\n  } \n}\nconst initialState = {\n    input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n          id: '',\n          name: '',\n          email: '',\n          entries: 0,\n          joined: ''\n      }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n    }\n  \n\nloadUser = (data) => {\n  this.setState({user: {\n            id: data.id,\n            name: data.name,\n            email: data.email,\n            entries: data.entries,\n            joined: data.joined\n    }\n  })\n}\n// npm install cors\n  // componentDidMount() {\n  //   fetch('http://localhost:3000')\n  //     .then(response => response.json())\n  //     .then(console.log)\n  // }\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height  = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n    // console.log(width, height);\n  }\n\n  displayFaceBox = (box) => {\n    // console.log(box);\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    app.models.predict(\n      Clarifai.FACE_DETECT_MODEL, \n      this.state.input)\n    .then(response => { \n      if (response) {\n          fetch('https://fierce-shore-50408.herokuapp.com/image', {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              id: this.state.user.id\n        })\n      })\n          .then(response => response.json())\n          .then(count => {\n            this.setState(Object.assign(this.state.user, { entries: count}))\n          })\n          .catch(console.log)\n      }\n         this.displayFaceBox(this.calculateFaceLocation(response))}\n      )\n      // console.log(response.outputs[0].data.regions[0].region_info.bounding_box);\n    .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      // this.setState({isSignedIn: false})\n      this.setState(initialState);\n    }else if (route === 'home'){\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  render () {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n         <Particles className='particles'\n          params={particlesOptions}\n        />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        { route === 'home'\n          ? <div>\n              <Logo />\n              <Rank\n                name={this.state.user.name}\n                entries={this.state.user.entries}\n              />\n              <ImageLinkForm\n                onInputChange={this.onInputChange}\n                onButtonSubmit={this.onButtonSubmit}\n              />\n              <FaceRecognition box={box} imageUrl={imageUrl} />\n            </div>\n          : (\n             route === 'signin'\n             ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n             : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            )\n        }\n      </div>\n    );\n    // return (\n    //   <div className=\"App\">  \n    //     <Particles className='particles'\n    //             params={particlesOptions}\n    //     />  \n    //     <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange}/>\n    //     { this.state.route === 'home' ?\n    //     <div>\n    //         <Logo />\n    //         <Rank name={this.state.user.name} entries={this.state.user.entries} />\n    //         <ImageLinkForm \n    //           onInputChange={this.onInputChange} \n    //           onButtonSubmit={this.onButtonSubmit} />\n    //         <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl}/>\n    //     </div>\n    //     : \n    //     (\n    //       this.state.route === 'signin' ?\n    //       <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n    //       : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n    //     ) \n    //   }\n    //   </div>\n    // );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}